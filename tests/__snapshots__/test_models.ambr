# serializer version: 1
# name: test_about_model
  About(version='5.8.0-alpha.1', api_version='5.8.0-alpha.1', php_version='8.1.5', os='Linux', driver='mysql')
# ---
# name: test_account_transactions_model
  list([
    dict({
      'attributes': dict({
        'created_at': '2018-09-17T12:46:47+01:00',
        'group_title': 'Split transaction title.',
        'transactions': list([
          dict({
            'amount': '123.45',
            'bill_id': '111',
            'bill_name': 'Monthly rent',
            'book_date': '2025-06-16T19:01:38.730Z',
            'budget_id': '4',
            'budget_name': 'Groceries',
            'bunq_payment_id': 'string',
            'category_id': '43',
            'category_name': 'Groceries',
            'currency_code': 'EUR',
            'currency_decimal_places': 2,
            'currency_id': '12',
            'currency_name': 'Euro',
            'currency_symbol': '$',
            'date': '2018-09-17T12:46:47+01:00',
            'description': 'Vegetables',
            'destination_iban': 'NL02ABNA0123456789',
            'destination_id': '2',
            'destination_name': 'Buy and Large',
            'destination_type': 'Asset account',
            'due_date': '2025-06-16T19:01:38.730Z',
            'external_id': 'string',
            'external_url': 'string',
            'foreign_amount': '123.45',
            'foreign_currency_code': 'USD',
            'foreign_currency_decimal_places': 2,
            'foreign_currency_id': '17',
            'foreign_currency_symbol': '$',
            'has_attachments': False,
            'import_hash_v2': 'string',
            'interest_date': '2025-06-16T19:01:38.730Z',
            'internal_reference': 'string',
            'invoice_date': '2025-06-16T19:01:38.730Z',
            'latitude': 51.983333,
            'longitude': 5.916667,
            'notes': 'Some example notes',
            'order': 0,
            'original_source': 'string',
            'payment_date': '2025-06-16T19:01:38.730Z',
            'process_date': '2025-06-16T19:01:38.730Z',
            'reconciled': False,
            'recurrence_count': 12,
            'recurrence_id': 'string',
            'recurrence_total': 0,
            'sepa_batch_id': 'string',
            'sepa_cc': 'string',
            'sepa_ci': 'string',
            'sepa_country': 'string',
            'sepa_ct_id': 'string',
            'sepa_ct_op': 'string',
            'sepa_db': 'string',
            'sepa_ep': 'string',
            'source_iban': 'NL02ABNA0123456789',
            'source_id': '2',
            'source_name': 'Checking account',
            'source_type': 'Asset account',
            'tags': None,
            'transaction_journal_id': '10421',
            'type': 'withdrawal',
            'user': '3',
            'zoom_level': 6,
          }),
          dict({
            'amount': '200.00',
            'bill_id': '112',
            'bill_name': 'Monthly salary',
            'book_date': '2019-01-01T10:00:00+01:00',
            'budget_id': '5',
            'budget_name': 'Income',
            'bunq_payment_id': 'bunq-jan-2019',
            'category_id': '44',
            'category_name': 'Salary',
            'currency_code': 'USD',
            'currency_decimal_places': 2,
            'currency_id': '13',
            'currency_name': 'US Dollar',
            'currency_symbol': '$',
            'date': '2019-01-01T10:00:00+01:00',
            'description': 'Salary',
            'destination_iban': 'NL02ABNA0123456789',
            'destination_id': '2',
            'destination_name': 'Checking account',
            'destination_type': 'Asset account',
            'due_date': '2019-01-01T10:00:00+01:00',
            'external_id': 'ext-jan-2019',
            'external_url': 'https://employer.com/payroll',
            'foreign_amount': '180.00',
            'foreign_currency_code': 'EUR',
            'foreign_currency_decimal_places': 2,
            'foreign_currency_id': '18',
            'foreign_currency_symbol': '€',
            'has_attachments': True,
            'import_hash_v2': 'hash-jan-2019',
            'interest_date': '2019-01-01T10:00:00+01:00',
            'internal_reference': 'ref-jan-2019',
            'invoice_date': '2019-01-01T10:00:00+01:00',
            'latitude': 40.7128,
            'longitude': -74.006,
            'notes': 'Salary for January',
            'order': 1,
            'original_source': 'payroll',
            'payment_date': '2019-01-01T10:00:00+01:00',
            'process_date': '2019-01-01T10:00:00+01:00',
            'reconciled': True,
            'recurrence_count': 1,
            'recurrence_id': 'rec-jan-2019',
            'recurrence_total': 1,
            'sepa_batch_id': 'sepa-batch-jan-2019',
            'sepa_cc': 'sepa-cc-jan-2019',
            'sepa_ci': 'sepa-ci-jan-2019',
            'sepa_country': 'US',
            'sepa_ct_id': 'sepa-id-jan-2019',
            'sepa_ct_op': 'sepa-op-jan-2019',
            'sepa_db': 'sepa-db-jan-2019',
            'sepa_ep': 'sepa-ep-jan-2019',
            'source_iban': 'US12345678901234567890',
            'source_id': '3',
            'source_name': 'Employer',
            'source_type': 'Income account',
            'tags': list([
              'income',
              'salary',
            ]),
            'transaction_journal_id': '10422',
            'type': 'deposit',
            'user': '4',
            'zoom_level': 8,
          }),
          dict({
            'amount': '75.00',
            'bill_id': '113',
            'bill_name': 'Monthly transfer',
            'book_date': '2020-05-15T15:30:00+01:00',
            'budget_id': '6',
            'budget_name': 'Savings',
            'bunq_payment_id': 'bunq-may-2020',
            'category_id': '45',
            'category_name': 'Transfers',
            'currency_code': 'GBP',
            'currency_decimal_places': 2,
            'currency_id': '14',
            'currency_name': 'Pound Sterling',
            'currency_symbol': '£',
            'date': '2020-05-15T15:30:00+01:00',
            'description': 'Transfer to savings',
            'destination_iban': 'GB29NWBK60161331926819',
            'destination_id': '4',
            'destination_name': 'Savings account',
            'destination_type': 'Asset account',
            'due_date': '2020-05-15T15:30:00+01:00',
            'external_id': 'ext-may-2020',
            'external_url': 'https://bank.com/transfer',
            'foreign_amount': '100.00',
            'foreign_currency_code': 'USD',
            'foreign_currency_decimal_places': 2,
            'foreign_currency_id': '19',
            'foreign_currency_symbol': '$',
            'has_attachments': False,
            'import_hash_v2': 'hash-may-2020',
            'interest_date': '2020-05-15T15:30:00+01:00',
            'internal_reference': 'ref-may-2020',
            'invoice_date': '2020-05-15T15:30:00+01:00',
            'latitude': 51.5074,
            'longitude': 0.1278,
            'notes': 'Transfer to savings account',
            'order': 2,
            'original_source': 'bank',
            'payment_date': '2020-05-15T15:30:00+01:00',
            'process_date': '2020-05-15T15:30:00+01:00',
            'reconciled': False,
            'recurrence_count': 1,
            'recurrence_id': 'rec-may-2020',
            'recurrence_total': 1,
            'sepa_batch_id': 'sepa-batch-may-2020',
            'sepa_cc': 'sepa-cc-may-2020',
            'sepa_ci': 'sepa-ci-may-2020',
            'sepa_country': 'GB',
            'sepa_ct_id': 'sepa-id-may-2020',
            'sepa_ct_op': 'sepa-op-may-2020',
            'sepa_db': 'sepa-db-may-2020',
            'sepa_ep': 'sepa-ep-may-2020',
            'source_iban': 'GB29NWBK60161331926819',
            'source_id': '2',
            'source_name': 'Checking account',
            'source_type': 'Asset account',
            'tags': list([
              'transfer',
            ]),
            'transaction_journal_id': '10423',
            'type': 'transfer',
            'user': '5',
            'zoom_level': 10,
          }),
        ]),
        'updated_at': '2018-09-17T12:46:47+01:00',
        'user': '3',
      }),
      'id': '2',
      'links': dict({
        '0': dict({
          'rel': 'self',
          'uri': '/OBJECTS/1',
        }),
        'self': 'https://demo.firefly-iii.org/api/v1/OBJECTS/1',
      }),
      'type': 'transactions',
    }),
  ])
# ---
# name: test_accounts_model
  list([
    Account(type='accounts', id='2', attributes=AccountAttributes(created_at='2018-09-17T12:46:47+01:00', updated_at='2018-09-17T12:46:47+01:00', active=False, name='My checking account', type='asset', account_role='defaultAsset', currency_id='12', currency_code='EUR', currency_symbol='$', currency_decimal_places=2, native_currency_id='12', native_currency_code='EUR', native_currency_symbol='$', native_currency_decimal_places=2, current_balance='123.45', native_current_balance='123.45', current_balance_date='2018-09-17T12:46:47+01:00', order=1, notes='Some example notes', monthly_payment_date='2018-09-17T12:46:47+01:00', credit_card_type='monthlyFull', account_number='7009312345678', iban='GB98MIDL07009312345678', bic='BOFAUS3N', virtual_balance='123.45', native_virtual_balance='123.45', opening_balance='-1012.12', native_opening_balance='-1012.12', opening_balance_date='2018-09-17T12:46:47+01:00', liability_type='loan', liability_direction='credit', interest='5.3', interest_period='monthly', current_debt='1012.12', include_net_worth=True, longitude=5.916667, latitude=51.983333, zoom_level=6, last_activity=None)),
    Account(type='accounts', id='3', attributes=AccountAttributes(created_at='2019-01-01T10:00:00+01:00', updated_at='2020-01-01T10:00:00+01:00', active=True, name='Savings Account', type='asset', account_role='savingsAsset', currency_id='13', currency_code='USD', currency_symbol='$', currency_decimal_places=2, native_currency_id='13', native_currency_code='USD', native_currency_symbol='$', native_currency_decimal_places=2, current_balance='5000.00', native_current_balance='5000.00', current_balance_date='2020-01-01T10:00:00+01:00', order=2, notes='Main savings account', monthly_payment_date=None, credit_card_type=None, account_number='1234567890', iban='US12345678901234567890', bic='CITIUS33', virtual_balance='0.00', native_virtual_balance='0.00', opening_balance='1000.00', native_opening_balance='1000.00', opening_balance_date='2019-01-01T10:00:00+01:00', liability_type=None, liability_direction=None, interest='1.2', interest_period='yearly', current_debt=None, include_net_worth=True, longitude=-74.006, latitude=40.7128, zoom_level=8, last_activity=None)),
    Account(type='accounts', id='4', attributes=AccountAttributes(created_at='2021-05-10T09:30:00+01:00', updated_at='2022-05-10T09:30:00+01:00', active=True, name='Credit Card', type='liability', account_role='creditCard', currency_id='14', currency_code='GBP', currency_symbol='£', currency_decimal_places=2, native_currency_id='14', native_currency_code='GBP', native_currency_symbol='£', native_currency_decimal_places=2, current_balance='-250.00', native_current_balance='-250.00', current_balance_date='2022-05-10T09:30:00+01:00', order=3, notes='Credit card account', monthly_payment_date='2022-05-15T09:30:00+01:00', credit_card_type='monthlyFull', account_number='9876543210', iban='GB29NWBK60161331926819', bic='NWBKGB2L', virtual_balance='0.00', native_virtual_balance='0.00', opening_balance='0.00', native_opening_balance='0.00', opening_balance_date='2021-05-10T09:30:00+01:00', liability_type='credit', liability_direction='debit', interest='19.99', interest_period='monthly', current_debt='250.00', include_net_worth=False, longitude=0.1278, latitude=51.5074, zoom_level=10, last_activity=None)),
  ])
# ---
